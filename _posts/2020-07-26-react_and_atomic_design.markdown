---
layout: post
title:      "React and atomic design"
date:       2020-07-27 01:32:18 +0000
permalink:  react_and_atomic_design
---

React has been a beautifully tied bow on a present that is filled with the knowledge of everything that I've learned so far. With the amount of "magic" that react provides, it truly throws you for a whirl but when that lightbulb moment finally happens, you start to understand how much potential it has and the flow beings to form. One of the most important fundamentals I learned is designing with "atomic design" in mind and I learned alot from Natam Oliveira's article on it found at https://cheesecakelabs.com/blog/rethinking-atomic-design-react-projects/ . Its basic structure means that things that are atoms are which on their own, arent really too much of anything, but when structured into a "molecules" that they form together to make something more significant. When combining these molecules, you start to approach an "organism" which then have this form about them that allows you to think about how an organism is supposed to ... react! It's important to remain bonded together in its lifecycle, and its important to think about how you can apply these organisms together and not have to build new similar ones. With these new revelations in mind, if I were to redesign this entire project again, I can definitely fix the issues with remaining DRY! 
When I started to realize that states weren't always necessary and combined with es6 structures, I began to see that something like my "post" organism can coexist with everything else that I had. It was the first lightbulb moment when I realized that post was going to receive the same data that everything else going to in some way use again. It didnt require a state because I would pass the props down to it, and it didnt matter which other organism was going to coexist with it. This organism was going to get along with everyone and it would befriend all the other ones. 
I also really appreciated the redux methods I had to use because of the states that I could map to props without having to do any of it manually. No unnecessary hardcoding, no dom manipulation just a simple roadmap for the pages to use. 
Lastly, learning react hooks on my own, and using it to update my "vote" score was very unintuitive at first because of the extra magic that it applied to my states, but it became clearer when I started to realize that redux dispatches and components can also be used as hooks, well thats a discovery to talk about on my next journey!
